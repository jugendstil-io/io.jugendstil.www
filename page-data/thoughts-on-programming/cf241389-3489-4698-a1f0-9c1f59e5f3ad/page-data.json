{"componentChunkName":"component---src-templates-thoughts-on-programming-post-js","path":"/thoughts-on-programming/cf241389-3489-4698-a1f0-9c1f59e5f3ad/","result":{"data":{"allFile":{"edges":[{"node":{"relativePath":"thoughts-on-programming/cf241389-3489-4698-a1f0-9c1f59e5f3ad.png","ext":".png","name":"cf241389-3489-4698-a1f0-9c1f59e5f3ad","childImageSharp":{"fluid":{"sizes":"(max-width: 800px) 100vw, 800px","src":"/static/094ba6579dea0ceb3261e9c91b24b472/ee604/cf241389-3489-4698-a1f0-9c1f59e5f3ad.png","srcSet":"/static/094ba6579dea0ceb3261e9c91b24b472/69585/cf241389-3489-4698-a1f0-9c1f59e5f3ad.png 200w,\n/static/094ba6579dea0ceb3261e9c91b24b472/497c6/cf241389-3489-4698-a1f0-9c1f59e5f3ad.png 400w,\n/static/094ba6579dea0ceb3261e9c91b24b472/ee604/cf241389-3489-4698-a1f0-9c1f59e5f3ad.png 800w,\n/static/094ba6579dea0ceb3261e9c91b24b472/f3583/cf241389-3489-4698-a1f0-9c1f59e5f3ad.png 1200w,\n/static/094ba6579dea0ceb3261e9c91b24b472/5707d/cf241389-3489-4698-a1f0-9c1f59e5f3ad.png 1600w,\n/static/094ba6579dea0ceb3261e9c91b24b472/ed396/cf241389-3489-4698-a1f0-9c1f59e5f3ad.png 2000w"}}}}]}},"pageContext":{"name":"cf241389-3489-4698-a1f0-9c1f59e5f3ad","current":{"path":"/thoughts-on-programming/cf241389-3489-4698-a1f0-9c1f59e5f3ad/","thought":{"author":"Douglas Crockford","createdAt":"19 Jun 2020 00:00:00 UTC","description":["Any run-of-the-mill idiot can produce code that a machine can execute, but good programmers write code that mortals can actually comprehend and reason about. Today's #ThoughtsOnProgramming features Douglas Crockford, inventor of the JSON format with a reminder on why style matters."],"id":"cf241389-3489-4698-a1f0-9c1f59e5f3ad","published":true,"quote":"It turns out that style matters in programming for the same reason that it matters in writing. It makes for better reading."}},"next":{"path":"/thoughts-on-programming/4734b610-2646-4ada-8a67-8da3193559c1/","thought":{"author":"Martin Fowler","createdAt":"11 Jun 2020 00:00:00 UTC","description":["In a professional environment, the ratio of time spent reading versus writing code is about 10 to 1. Producing clean, comprehensive and maintainable code is of utmost importance and leads to increased team effectiveness. Here's nice quote from Thought Works Martin Fowler which sums it up quite nicely."],"id":"4734b610-2646-4ada-8a67-8da3193559c1","published":true,"quote":"Any fool can write code that a computer can understand. Good programmers write code that humans can understand."}},"prev":{"path":"/thoughts-on-programming/b617f62f-130c-4ad1-b773-d0bcd1ed1b55/","thought":{"author":"Andy Hunt","createdAt":"09 Jun 2020 00:00:00 UTC","description":["Unless you fancy shipping faulty software, one should apply appropriate testing techniques, ideally, let your tests drive implementation. Today's issue of #ThoughtsOnProgramming features Andy Hunt, author of the \"The Pragmatic Programmer\", a timeless introduction on how to contribute maintainable code on teams."],"id":"b617f62f-130c-4ad1-b773-d0bcd1ed1b55","published":true,"quote":"No one in the brief history of computing has ever written a piece of perfect software. It's unlikely that you'll be the first."}}}}}