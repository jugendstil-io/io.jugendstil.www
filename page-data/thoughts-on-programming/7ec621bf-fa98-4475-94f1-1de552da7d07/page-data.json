{"componentChunkName":"component---src-templates-thoughts-on-programming-post-js","path":"/thoughts-on-programming/7ec621bf-fa98-4475-94f1-1de552da7d07/","result":{"data":{"allFile":{"edges":[{"node":{"relativePath":"thoughts-on-programming/7ec621bf-fa98-4475-94f1-1de552da7d07.png","ext":".png","name":"7ec621bf-fa98-4475-94f1-1de552da7d07","childImageSharp":{"fluid":{"sizes":"(max-width: 800px) 100vw, 800px","src":"/static/36f1200bfb639eedd3e2efe5044898b7/ee604/7ec621bf-fa98-4475-94f1-1de552da7d07.png","srcSet":"/static/36f1200bfb639eedd3e2efe5044898b7/69585/7ec621bf-fa98-4475-94f1-1de552da7d07.png 200w,\n/static/36f1200bfb639eedd3e2efe5044898b7/497c6/7ec621bf-fa98-4475-94f1-1de552da7d07.png 400w,\n/static/36f1200bfb639eedd3e2efe5044898b7/ee604/7ec621bf-fa98-4475-94f1-1de552da7d07.png 800w,\n/static/36f1200bfb639eedd3e2efe5044898b7/f3583/7ec621bf-fa98-4475-94f1-1de552da7d07.png 1200w,\n/static/36f1200bfb639eedd3e2efe5044898b7/5707d/7ec621bf-fa98-4475-94f1-1de552da7d07.png 1600w,\n/static/36f1200bfb639eedd3e2efe5044898b7/ed396/7ec621bf-fa98-4475-94f1-1de552da7d07.png 2000w"}}}}]}},"pageContext":{"name":"7ec621bf-fa98-4475-94f1-1de552da7d07","current":{"path":"/thoughts-on-programming/7ec621bf-fa98-4475-94f1-1de552da7d07/","thought":{"author":"Antoine de Saint-ExupÃ©ry","createdAt":"15 Oct 2020 00:00:00 UTC","description":["Simplicity is the key to creating reliable software. And one of our guiding principles here at Jugendstil_IO is <strong>KISS</strong> ðŸ˜˜, we love <strong>keeping it stupid and simple</strong>.","What bugs us is, that too often \"simple\" is erroneously mistaken for \"easy\". \"Easy\" means \"not difficult\" or \"done or obtained without a lot of effort or problems\".\n","\"Simple\" is the opposite of \"complex\". Writing a quality piece of software or designing a system which one can understand easily is extremely hard. You need to get your thinking clean to make it simple!","<strong>Easy != Simple</strong>"],"id":"7ec621bf-fa98-4475-94f1-1de552da7d07","published":true,"quote":"Perfection is achieved not when there is nothing more to add, but rather when there is nothing more to take away."}},"next":{"path":"/thoughts-on-programming/d424f751-3985-443c-b85a-195a1d9fc79c/","thought":{"author":"Edward V. Berard","createdAt":"28 Oct 2020 00:00:00 UTC","description":["<strong>A friendly reminder on Agile Principle #2</strong>","<ul><li>We aren't perfect,</li><li>We cannot predict the future, and,</li><li>No matter how much we try, we can't think of everything.</li></ul>","The truth is, we don't know for 100% what our customers' needs are or the best way to fill their needs. Not only do we not know exactly what they need today, but we also don't know what they will need by the time we are done developing a solution, because our customers and the markets they are operating in are constantly changing.","Therefore, inevitably there will always be requests for changes (even late in the project), and our choices are to either make the change or live with the consequences of not changing (lower revenues, lower quality, lower profits, a bad reputation in the market etc.).","It's simple; software specifications keep moving as the world keeps moving. Stop fighting them and design your product development pipeline in a way so that it <strong>embraces changing requirements</strong>!"],"id":"d424f751-3985-443c-b85a-195a1d9fc79c","published":true,"quote":"Walking on water and developing software from a specification are easy if both are frozen."}},"prev":{"path":"/thoughts-on-programming/e619d417-48d7-41ae-973e-cac620ef8c58/","thought":{"author":"Eric Ries","createdAt":"22 Sep 2020 00:00:00 UTC","description":["... it's the same old story over and over again. A team comes up with an idea and spends several months with building a minimum viable product (MVP) and discussing which features should go in or are being kept in the backlog for the full, mature, stable product.","<strong>Can you see the problem in this picture? Why do so many start-ups fail?</strong>","An MVP is not just the final product with half the features in order to get it out the door just quicker. The MVP doesn't have to be a product at all, and it's not something you build only once, and then consider it done. It's instead an iterative process which allows you to identify your riskiest hypothesis, find the smallest possible experiment to test that hypothesis and leverage the results to correct the course of your journey.","Tackling problems that are interesting to solve rather than the ones which serve a market need is the number one reason for failure (noted in 42% of cases according to CB Insight failure post-mortem analysis)."],"id":"e619d417-48d7-41ae-973e-cac620ef8c58","published":true,"quote":"We must learn what customers really want, not what they say they want or what we think they should want."}}}}}