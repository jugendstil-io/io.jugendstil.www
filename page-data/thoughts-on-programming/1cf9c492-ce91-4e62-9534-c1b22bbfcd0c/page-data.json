{"componentChunkName":"component---src-templates-thoughts-on-programming-post-js","path":"/thoughts-on-programming/1cf9c492-ce91-4e62-9534-c1b22bbfcd0c/","result":{"data":{"allFile":{"edges":[{"node":{"relativePath":"thoughts-on-programming/1cf9c492-ce91-4e62-9534-c1b22bbfcd0c.png","ext":".png","name":"1cf9c492-ce91-4e62-9534-c1b22bbfcd0c","childImageSharp":{"fluid":{"sizes":"(max-width: 800px) 100vw, 800px","src":"/static/22fd27ebf9db384de9c34a6682db59bf/ee604/1cf9c492-ce91-4e62-9534-c1b22bbfcd0c.png","srcSet":"/static/22fd27ebf9db384de9c34a6682db59bf/69585/1cf9c492-ce91-4e62-9534-c1b22bbfcd0c.png 200w,\n/static/22fd27ebf9db384de9c34a6682db59bf/497c6/1cf9c492-ce91-4e62-9534-c1b22bbfcd0c.png 400w,\n/static/22fd27ebf9db384de9c34a6682db59bf/ee604/1cf9c492-ce91-4e62-9534-c1b22bbfcd0c.png 800w,\n/static/22fd27ebf9db384de9c34a6682db59bf/f3583/1cf9c492-ce91-4e62-9534-c1b22bbfcd0c.png 1200w,\n/static/22fd27ebf9db384de9c34a6682db59bf/5707d/1cf9c492-ce91-4e62-9534-c1b22bbfcd0c.png 1600w,\n/static/22fd27ebf9db384de9c34a6682db59bf/ed396/1cf9c492-ce91-4e62-9534-c1b22bbfcd0c.png 2000w"}}}}]}},"pageContext":{"name":"1cf9c492-ce91-4e62-9534-c1b22bbfcd0c","current":{"path":"/thoughts-on-programming/1cf9c492-ce91-4e62-9534-c1b22bbfcd0c/","thought":{"author":"Edsger W. Dijkstra","createdAt":"18 Jun 2020 00:00:00 UTC","description":["Fact: software is written by humans and therefore has bugs and the more code you write, the more bugs you will produce. Today's issue of #ThoughtsOnProgramming features Edsger W. Dijkstra with a somewhat polemical but true statement which serves as a good reminder why one should identify and mitigate risks through systematic testing strategies."],"id":"1cf9c492-ce91-4e62-9534-c1b22bbfcd0c","published":true,"quote":"If debugging is the process of removing software bugs, then programming must be the process of putting them in."}},"next":{"path":"/thoughts-on-programming/4734b610-2646-4ada-8a67-8da3193559c1/","thought":{"author":"Martin Fowler","createdAt":"11 Jun 2020 00:00:00 UTC","description":["In a professional environment, the ratio of time spent reading versus writing code is about 10 to 1. Producing clean, comprehensive and maintainable code is of utmost importance and leads to increased team effectiveness. Here's nice quote from Thought Works Martin Fowler which sums it up quite nicely."],"id":"4734b610-2646-4ada-8a67-8da3193559c1","published":true,"quote":"Any fool can write code that a computer can understand. Good programmers write code that humans can understand."}},"prev":{"path":"/thoughts-on-programming/b617f62f-130c-4ad1-b773-d0bcd1ed1b55/","thought":{"author":"Andy Hunt","createdAt":"09 Jun 2020 00:00:00 UTC","description":["Unless you fancy shipping faulty software, one should apply appropriate testing techniques, ideally, let your tests drive implementation. Today's issue of #ThoughtsOnProgramming features Andy Hunt, author of the \"The Pragmatic Programmer\", a timeless introduction on how to contribute maintainable code on teams."],"id":"b617f62f-130c-4ad1-b773-d0bcd1ed1b55","published":true,"quote":"No one in the brief history of computing has ever written a piece of perfect software. It's unlikely that you'll be the first."}}}}}