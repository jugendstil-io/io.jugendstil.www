(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{Bl7J:function(e,t,o){"use strict";var a=o("q1tI"),r=o.n(a),n=o("Fzi1"),i=o("LbRr");o("XjQp");t.a=function(e){var t=e.className,o=e.children;return r.a.createElement("div",{className:t},r.a.createElement(i.a,null),r.a.createElement("main",null,o),r.a.createElement(n.a,null))}},PdQy:function(e,t,o){},XjQp:function(e,t,o){},fbn0:function(e,t,o){"use strict";o.r(t),o.d(t,"pageQuery",(function(){return c}));o("E5k/"),o("pJf4"),o("v9g0"),o("zGcK");var a=o("q1tI"),r=o.n(a),n=o("Bl7J"),i=o("3CE+"),s=o("xtJj"),u=(o("PdQy"),o("4i4B")),d="Thoughts On Programming",h='"Thoughts on programming" is a curated listing of quotes from industry thought leaders on software craftsmanship, product development and lean thinking in general.',l=function(e){return r.a.createElement("div",{className:"thought",key:e.id},r.a.createElement("a",{href:u.a.THOUGHTS_ON_PROGRAMMING+"/"+e.id+"/"},r.a.createElement("img",{alt:e.quote,src:e.image.src,srcSet:e.image.srcSet,sizes:e.image.sizes})))};t.default=function(e){var t=e.data.allFile.edges.map((function(e){return e.node})),o=s.map((function(e){var o=t.find((function(t){return t.name===e.id}));return Object.assign(Object.assign({},e),{},{image:{sizes:o.childImageSharp.fluid.sizes,src:o.childImageSharp.fluid.src,srcSet:o.childImageSharp.fluid.srcSet}})})).filter((function(e){return e.published})).sort((function(e,t){return new Date(t.createdAt)-new Date(e.createdAt)}));return r.a.createElement(n.a,{className:"thoughts-on-programming-index-page"},r.a.createElement(i.a,{title:d,description:h}),r.a.createElement("section",null,r.a.createElement("div",{className:"row"},r.a.createElement("div",{className:"col-xs-12 col-sm-9 col-md-9 col-lg-9"},r.a.createElement("h1",{className:"thought-title"},r.a.createElement("small",null,"Thoughts on",r.a.createElement("br",null))," ","Programming"),r.a.createElement("p",null,'"Thoughts on programming" is a curated listing of quotes from industry thought leaders on software craftsmanship, product development and lean thinking in general. Follow us on'," ",r.a.createElement("a",{href:"https://www.instagram.com/jugendstil_io/",rel:"noopener noreferrer",target:"_blank"},"Instagram"),","," ",r.a.createElement("a",{href:"https://twitter.com/jugendstil_io/",rel:"noopener noreferrer",target:"_blank"},"Twitter")," ","or"," ",r.a.createElement("a",{href:"https://www.linkedin.com/company/jugendstil-io/",rel:"noopener noreferrer",target:"_blank"},"LinkedIn")," ","to receive the latest ",r.a.createElement("em",null,"#ThoughtsOnProgramming")," straight to your inbox."))),r.a.createElement("div",{className:"row"},o.map(l))))};var c="3583192297"},xtJj:function(e){e.exports=JSON.parse('[{"author":"Bill Gates","createdAt":"25 Jun 2022 00:00:00 UTC","description":["Retaining customers is cheaper than acquiring new ones. Attract a new customer can cost up to five times more than keeping an existing customer.","One key factor for keeping your customers happy is being prepared what they have to say and is having well-developed complaint management process in place to respond to complaints in a structured manner.","Here at Jugendstil_IO, we believe in:","‚Ä¢ Be open to criticism and discussing problems with your customers.","‚Ä¢ Learn to listen and understand why your customers might be frustrated.","‚Ä¢ Show genuine care and attention!","‚Ä¢ Acknowledge the problem and apologise.","‚Ä¢ To learn and to constantly optimise your processes and attitude towards customer happiness do post mortems and think about what went wrong."],"id":"aa2a2a01-747d-44d8-b6f5-9aeda6978ad4","published":true,"quote":"Your most unhappy customers are your greatest source of learning."},{"author":"Karen Sp√§rck Jones","createdAt":"8 Mar 2021 00:00:00 UTC","description":["Here at Jugendstil_IO, we believe in celebrating women everywhere every day: empowering women and driving gender equality is not limited to just one day but a long-term commitment. We have the opportunity to learn from each other, remove blind spots, create inclusive cultures and build awareness of how we can all support this change.","The quote we have selected for this issue of #ThoughtsOnProgramming is from Karen Sp√§rck Jones, a British computer scientist, a pioneer in statistics and linguistics and a role model for an advocate for women in tech.","The British Computer Society recognizes her outstanding achievements in Information Retrieval and Natural Language Processing with the yearly Karen Sp√§rck Jones Award."],"id":"4a45a06a-3244-40cd-a6c2-0f87768b540e","published":true,"quote":"I think it\'s very important to get more women into computing. My slogan is: Computing is too important to be left to men."},{"author":"The New Normal","createdAt":"17 Dec 2020 00:00:00 UTC","description":["2020, an unprecedented year is turning towards its end, and we just wanted to share the research results from our team of linguists, lexicographers, sociolinguists, language technologists and word enthusiasts.","So please welcome the quote of the year 2020!\\n"],"id":"48cb18f8-3947-4e2b-a5c1-55c47b8dad19","published":true,"quote":"You\'re on mute."},{"author":"John Backus","createdAt":"3 Dec 2020 00:00:00 UTC","description":["üë®üèª‚Äçüíª Today\'s issue of #ThoughtsOnProgramming features John Backus, designer of the Fortran programming language and Turing award winner, who would have turned 96 today on this very 3rd of December."],"id":"208dc092-66d8-41fb-b82e-3c8a8bd91e7d","published":true,"quote":"I, myself, have had many failures and I\'ve learned that if you are not failing a lot, you are probably not being as creative as you could be - you aren\'t stretching your imagination."},{"author":"Reid Hoffman","createdAt":"25 Nov 2020 00:00:00 UTC","description":["Sometimes the intent of great quotes is lost over time; often, they are misinterpreted and misused because people apply them out of context. Reid Hoffman\'s quote - \\"If you are not embarrassed by the first version of your product, you\'ve launched too late.\\" - is an excellent example of the loss of intent.","This issue of #ThoughtsOnProgramming is just a friendly reminder that Reid\'s quote is not permission to cut corners, act recklessly, proceed without a clear plan and release crappy products.","Yes, time to market is essential, and we love getting value into the hands of our customers as fast as possible so that we can learn from their feedback and improve our product. However, once you\'ve decided to build something (which is actually the most challenging part), do it to the best of your knowledge and use the appropriate tools for the job.","<strong>Do not compromise on quality!</strong>"],"id":"24a71391-6c5e-43c0-81d9-1c846bc352f8","published":true,"quote":"If you are not embarrassed by the first version of your product, you\'ve launched too late."},{"author":"Edward V. Berard","createdAt":"28 Oct 2020 00:00:00 UTC","description":["<strong>A friendly reminder on Agile Principle #2</strong>","We aren\'t perfect; We cannot predict the future; and, No matter how much we try, we can\'t think of everything.</li></ul>","The truth is, we don\'t know for 100% what our customers\' needs are or the best way to fill their needs. Not only do we not know exactly what they need today, but we also don\'t know what they will need by the time we are done developing a solution, because our customers and the markets they are operating in are constantly changing.","Therefore, inevitably there will always be requests for changes (even late in the project), and our choices are to either make the change or live with the consequences of not changing (lower revenues, lower quality, lower profits, a bad reputation in the market etc.).","It\'s simple; software specifications keep moving as the world keeps moving. Stop fighting them and design your product development pipeline in a way so that it <strong>embraces changing requirements</strong>!"],"id":"d424f751-3985-443c-b85a-195a1d9fc79c","published":true,"quote":"Walking on water and developing software from a specification are easy if both are frozen."},{"author":"Antoine de Saint-Exup√©ry","createdAt":"15 Oct 2020 00:00:00 UTC","description":["Simplicity is the key to creating reliable software. And one of our guiding principles here at Jugendstil_IO is <strong>KISS</strong> üòò, we love <strong>keeping it stupid and simple</strong>.","What bugs us is, that too often \\"simple\\" is erroneously mistaken for \\"easy\\". \\"Easy\\" means \\"not difficult\\" or \\"done or obtained without a lot of effort or problems\\".\\n","\\"Simple\\" is the opposite of \\"complex\\". Writing a quality piece of software or designing a system which one can understand easily is extremely hard. You need to get your thinking clean to make it simple!","<strong>Easy != Simple</strong>"],"id":"7ec621bf-fa98-4475-94f1-1de552da7d07","published":true,"quote":"Perfection is achieved not when there is nothing more to add, but rather when there is nothing more to take away."},{"author":"Eric Ries","createdAt":"22 Sep 2020 00:00:00 UTC","description":["... it\'s the same old story over and over again. A team comes up with an idea and spends several months with building a minimum viable product (MVP) and discussing which features should go in or are being kept in the backlog for the full, mature, stable product.","<strong>Can you see the problem in this picture? Why do so many start-ups fail?</strong>","An MVP is not just the final product with half the features in order to get it out the door just quicker. The MVP doesn\'t have to be a product at all, and it\'s not something you build only once, and then consider it done. It\'s instead an iterative process which allows you to identify your riskiest hypothesis, find the smallest possible experiment to test that hypothesis and leverage the results to correct the course of your journey.","Tackling problems that are interesting to solve rather than the ones which serve a market need is the number one reason for failure (noted in 42% of cases according to CB Insight failure post-mortem analysis)."],"id":"e619d417-48d7-41ae-973e-cac620ef8c58","published":true,"quote":"We must learn what customers really want, not what they say they want or what we think they should want."},{"author":"Dennis Ritchie","createdAt":"09 Sep 2020 00:00:00 UTC","description":["Today\'s #ThoughtsOnProgramming features American computer scientist and C programming language inventor Dennis Ritchie who designed and developed together with Ken Thompson the first version of the UNIX operating system.","Without his contributions, computers and the internet, we know it today would not have been possible - Mr Ritchie would have turned 79 today.","Thank you üôè"],"id":"a8b02b68-56e0-4242-a0f4-7894cd4685ff","published":true,"quote":"UNIX is basically a simple operating system, but you have to be a genius to understand the simplicity."},{"author":"Jon Postel","createdAt":"06 Aug 2020 00:00:00 UTC","description":["Today\'s #ThoughtsOnProgramming features US American computer scientist Jon Postel who is best known for his contributions as editor of the RFC document series and the Simple Mail Transfer Protocol (SMTP)."],"id":"afba0c5e-02aa-40b0-b08a-0e0f70925a81","published":true,"quote":"If we wish to count lines of code, we should not regard them as \\"lines produced\\" but as \\"lines spent\\"."},{"author":"Edsger W. Dijkstra","createdAt":"28 Jul 2020 00:00:00 UTC","description":["Simplicity in code is not a contribution to the future! We don\'t do it because we\'re assuming a future opportunity for code-reuse, or because we want it to look prettier at a code review, or because we want to make it simpler to modify.","Without simplicity, we never produce reliable code that one can trust to run a business on. Good code does not mean, it is the shortest, the fastest and definitely not the cleverest one. It is code which can be trusted."],"id":"a3b360dd-9a86-4271-b12a-ad16c9907113","published":true,"quote":"If we wish to count lines of code, we should not regard them as \\"lines produced\\" but as \\"lines spent\\"."},{"author":"Paul Graham","createdAt":"01 Jul 2020 00:00:00 UTC","description":["Sometimes when we start working on a new service or product, we fall in love with the idea and jump straight into developing a solution.","Today\'s issue of #ThoughtsOnProgramming features \\"<a target=\\"_blank\\" rel=\\"nofollow\\" href=\\"https://www.ycombinator.com/\\">Y Combinator</a>\'s co-founder Paul Graham with a piece of advice from his essay \\"<a target=\\"_blank\\" rel=\\"nofollow\\" href=\\"http://paulgraham.com/gh.html\\">\\"Great Hackers\\"</a> that we should spend more time choosing the right problem to solve before jumping into implementation."],"id":"0154082e-262d-4e8d-8827-69bbfa10bbed","published":true,"quote":"In programming, as in many fields, the hard part isn\'t solving problems, but deciding what problems to solve."},{"author":"Jessica Gaston","createdAt":"28 Jun 2020 00:00:00 UTC","description":["Here at Jugendstil_IO, we\'re strong advocates of test-driven development and continuous delivery. Not only will an appropriate software testing strategy improve the quality of your product, enhance overall customer satisfaction and save you hard dollars, but it is at the same time one of the fundamental building blocks for your <a href=\\"/service/devops/\\">DevOps</a> journey."],"id":"b5d177d6-464b-4b04-987e-fadb576aa054","published":true,"quote":"One man\'s crappy software is another man\'s full time job."},{"author":"Cory House","createdAt":"26 Jun 2020 00:00:00 UTC","description":["Code for humans, not machines! We just can\'t overemphasis enough the importance of writing clean, comprehensive and maintainable code. Today\'s #ThoughtsOnProgramming features Cory House with a superb analogy on why your code should tell a story and be self-explanatory.","Happy Friday üéâ\\n"],"id":"9dfa502e-4775-455f-9cae-85f70e2799b2","published":true,"quote":"Code is like humor. When you have to explain it, it‚Äôs bad."},{"author":"Christopher Thompson","createdAt":"25 Jun 2020 00:00:00 UTC","description":["Usually, it doesn\'t take a lot to get short scripts and functions up and running. However, as your code-base becomes larger and more complex errors will creep in inevitably. It has even been mathematically proven that any code beyond a certain level of complexity includes at least one bug and probably quite more than that.","So long story short, one should always apply appropriate testing strategies to mitigate risk, BUT sometimes this #ThoughtOnProgramming given by Christopher Thompson might help as well üôÉ.","#StayInBed #WriteTestsFirst #SaveLifes"],"id":"7f330bf7-47c7-4a63-8898-92e129ad3dec","published":true,"quote":"Sometimes it pays to stay in bed on Monday, rather than spending the rest of the week debugging Monday\'s code."},{"author":"Reid Hoffman","createdAt":"24 Jun 2020 00:00:00 UTC","description":["World-class experts build networks which help them to navigate the world. Today\'s #ThoughtsOnProgramming features LinkedIn co-founder Reid Hoffman with his take on \\"why relationships matter\\"."],"id":"dcfa8190-7e43-4328-8f7a-4c352b4f787f","published":true,"quote":"No matter how brilliant your mind or strategy, if you‚Äôre playing a solo game, you‚Äôll always lose out to a team."},{"author":"Alan Turing","createdAt":"23 Jun 2020 00:00:00 UTC","description":["Today\'s issue of #ThoughtsOnProgramming features British mathematician, computer scientist and father of artificial intelligence Alan Turing, who would have turned 108 today.","The idea of computer-based AI dates back to 1950 when Turing introduced an experiment that is nowadays generally referred to as the Turing test, which in itself is very rudimentary. However, it remains the baseline that needs to be reached before a machine can be considered intelligent."],"id":"3e7c77a5-e998-47aa-8d29-d5a712589e43","published":true,"quote":"A computer would deserve to be called intelligent if it could deceive a human into believing that it was human."},{"author":"Konrad Zuse","createdAt":"22 Jun 2020 00:00:00 UTC","description":["Happy Monday üëã, today\'s issue of #ThoughtsOnProgramming features Konrad Zuse, the inventor of the first programmable computer \\"Z3\\", who would have turned 110 today on this very 22nd of June.","His quote dates back from a time when artificial intelligence was any more than just an idea. Interestingly, we are challenging the same questions today, as artificial intelligence, machine learning and the good old fashioned robots are a reality."],"id":"0e4aa786-2174-44cd-856e-1776d68619d8","published":true,"quote":"The danger of computers becoming like humans is not as great as the danger of humans becoming like computers."},{"author":"Douglas Crockford","createdAt":"19 Jun 2020 00:00:00 UTC","description":["Any run-of-the-mill idiot can produce code that a machine can execute, but good programmers write code that mortals can actually comprehend and reason about. Today\'s #ThoughtsOnProgramming features Douglas Crockford, inventor of the JSON format with a reminder on why style matters."],"id":"cf241389-3489-4698-a1f0-9c1f59e5f3ad","published":true,"quote":"It turns out that style matters in programming for the same reason that it matters in writing. It makes for better reading."},{"author":"Edsger W. Dijkstra","createdAt":"18 Jun 2020 00:00:00 UTC","description":["Fact: software is written by humans and therefore has bugs and the more code you write, the more bugs you will produce. Today\'s issue of #ThoughtsOnProgramming features Edsger W. Dijkstra with a somewhat polemical but true statement which serves as a good reminder why one should identify and mitigate risks through systematic testing strategies."],"id":"1cf9c492-ce91-4e62-9534-c1b22bbfcd0c","published":true,"quote":"If debugging is the process of removing software bugs, then programming must be the process of putting them in."},{"author":"Ralph Johnson","createdAt":"17 Jun 2020 00:00:00 UTC","description":["Today\'s issue of #ThoughtsOnProgramming features Ralph Johnson, co-author of the \\"<a target=\\"_blank\\" rel=\\"nofollow\\" href=\\"https://en.wikipedia.org/wiki/Design_Patterns\\">Design Pattern bible</a>\\" with a friendly reminder on the importance of creating software which is useful to specific users for achieving a defined goal effectively and with efficiency."],"id":"bc98a0fd-6c32-4dd9-9b56-805bbe5ebc02","published":true,"quote":"Before software can be reusable it first has to be usable."},{"author":"Chinese Proverb","createdAt":"16 Jun 2020 00:00:00 UTC","description":["üéØ Regardless of your specific industry, area of expertise or [INSERT WHATEVER YOU WANT HERE], if you want to be successful and grow in the future, the best time to act is now.","Today\'s #ThoughtsOnProgramming features a Chinese proverb which we\'ve shamelessly stolen from Will Sack\'s presentation \\"How to fundraise successfully during a pandemic\\". Will is the founder of <a target=\\"_blank\\" rel=\\"nofollow\\" href=\\"https://www.kindara.com\\">Kindara</a>, a digital health platform and community for women. He also provides training for entrepreneurs on fundraising through his accelerator program at <a target=\\"_blank\\" rel=\\"nofollow\\" href=\\"https://foundersgetfunded.com\\">GetFunded</a>."],"id":"a45f5576-fe7a-4f1c-a233-71f427b28322","published":true,"quote":"The best time to plant a tree was 20 years ago. The second best time is now."},{"author":"Linus Torvalds","createdAt":"15 Jun 2020 00:00:00 UTC","description":["Happy Monday Everybody üéâ, today\'s #ThoughtsOnProgramming features Mr. #LinuxKernel Linus Torvalds with a controversial quote on GNOME\'s lack of usability back in the early 2000s when the project decided to remove a couple of features to provide an enhanced base user experience.","You can find this highly entertaining morning reading <a target=\\"_blank\\" rel=\\"nofollow\\" href=\\"https://mail.gnome.org/archives/usability/2005-December/msg00021.html\\">here</a>."],"id":"5241e130-0e28-4294-93fa-5481eeb2f23e","published":true,"quote":"If you think your users are idiots, only idiots will use it."},{"author":"Harold Abelson","createdAt":"12 Jun 2020 00:00:00 UTC","description":["Following up on yesterday\'s issue of #ThoughtsOfProgramming and the idea of producing clean, comprehensive and maintainable code to increase team effectiveness, here\'s another very valid point by Harold Abelson."],"id":"c9585d81-4725-4641-a15e-224318119b6a","published":true,"quote":"Programs must be written for people to read, and only incidentally for machines to execute."},{"author":"Martin Fowler","createdAt":"11 Jun 2020 00:00:00 UTC","description":["In a professional environment, the ratio of time spent reading versus writing code is about 10 to 1. Producing clean, comprehensive and maintainable code is of utmost importance and leads to increased team effectiveness. Here\'s nice quote from Thought Works Martin Fowler which sums it up quite nicely."],"id":"4734b610-2646-4ada-8a67-8da3193559c1","published":true,"quote":"Any fool can write code that a computer can understand. Good programmers write code that humans can understand."},{"author":"Larry Tesler","createdAt":"10 Jun 2020 00:00:00 UTC","description":["How would modern user interfaces look like without copy & paste? Today\'s issue of #ThoughtsOnProgramming features Larry Tesler, who invented the cut, copy and paste commands during his time at Xerox PARC."],"id":"5c5cc424-4f78-4763-81e5-958b5de4fcfc","published":true,"quote":"You cannot reduce the complexity of a given task beyond a certain point. Once you\'ve reached that point, you can only shift the burden around."},{"author":"Andy Hunt","createdAt":"09 Jun 2020 00:00:00 UTC","description":["Unless you fancy shipping faulty software, one should apply appropriate testing techniques, ideally, let your tests drive implementation. Today\'s issue of #ThoughtsOnProgramming features Andy Hunt, author of the \\"The Pragmatic Programmer\\", a timeless introduction on how to contribute maintainable code on teams."],"id":"b617f62f-130c-4ad1-b773-d0bcd1ed1b55","published":true,"quote":"No one in the brief history of computing has ever written a piece of perfect software. It\'s unlikely that you\'ll be the first."},{"author":"Timothy Berners-Lee","createdAt":"08 Jun 2020 00:00:00 UTC","description":["üéÇ Today\'s #ThoughtsOnProgramming features British engineer and computer scientist Sir Timothy Berners-Lee who is best known as the inventor of the #WorldWideWeb. And who by the way turns 65 today, Happy Birthdayü•≥! Here is his take on why IT projects fail."],"id":"39940fc3-773e-43e2-9381-3ae2c1f6d24e","published":true,"quote":"I think IT projects are about supporting social systems - about communications between people and machines. They tend to fail due to cultural issues."},{"author":"Grace Hopper","createdAt":"07 Jun 2020 00:00:00 UTC","description":["üë©üèª‚Äçüíª Today\'s #ThoughtsOnProgramming features Grace Hopper, United States Navy rear admiral and computer scientist, who was among many other things, one of the first programmers of the Harvard Mark I computer."],"id":"de830135-9ac2-4c56-b2b9-4f8a588c72ce","published":true,"quote":"People have an enormous tendency to resist change. They love to say, \\"We\'ve always done it this way.\\" I try to fight that."},{"author":"Dave Farley","createdAt":"04 Jun 2020 00:00:00 UTC","description":["‚ö° Ô∏èToday\'s issue of #ThoughtsOnProgramming features Mr. #ContinuousDelivery Dave Farley, who was an early adopter of #agile development techniques and TDD advocate. He\'s the author of the \\"Continuous Delivery\\" bible and shares his thoughts on his personal blog."],"id":"39b827fa-b36d-4817-8b29-f6f5f1b41031","published":true,"quote":"If It Hurts, Do It More Frequently, and Bring the Pain Forward."},{"author":"Gordon Bell","createdAt":"03 Jun 2020 00:00:00 UTC","description":["Today\'s #ThoughtsOnProgramming features Gordon Bell, who designed the I/O subsystem of the PDP-1 while working as an electrical engineer at the Digital Equipment Corporation."],"id":"11da0cce-a44f-4834-89bd-9c1add24f96f","published":true,"quote":"The cheapest, fastest, and most reliable components are those that aren‚Äôt there."},{"author":"Kent Beck","createdAt":"02 Jun 2020 00:00:00 UTC","description":["üë©üèª‚Äçüíªüë®üèª‚Äçüíª Today\'s issue of #ThoughtsOnProgramming features Kent Beck, the #Agile godfather of #ExtremeProgramming and #TestDrivenDevelopment."],"id":"2a909919-738d-424b-91cd-609dc862c2c1","published":true,"quote":"It\'s not a testing problem, it\'s a design problem manifesting as a testing problem. Usually."},{"author":"Holy Bible (Proverbs 27:1)","createdAt":"01 Jun 2020 00:00:00 UTC","description":["üí° There are a lot of reasons for doing #PairProgramming. But ultimately it\'s about #Teamwork; it requires excellent communication and mutual respect."],"id":"f3572795-ffcb-434b-8ee3-715410f0c28a","published":true,"quote":"As iron sharpens iron, so one person sharpens another."}]')}}]);
//# sourceMappingURL=component---src-pages-thoughts-on-programming-js-930efba9639921156ae1.js.map