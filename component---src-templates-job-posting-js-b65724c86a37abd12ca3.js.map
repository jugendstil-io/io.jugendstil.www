{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/components/Banner/index.js","webpack:///./src/templates/job-posting.js","webpack:///./src/images/cover.jpeg","webpack:///./src/components/Button/Primary/index.js","webpack:///./src/components/Button/index.js"],"names":["Layout","className","children","Banner","src","description","alt","JobPosting","string","job","pageContext","current","title","location","replace","image","cover","openGraph","Button","Primary","label","style","marginBottom","url","URL","CAREER","CV_DROP","about","dangerouslySetInnerHTML","__html","scope","id","employmentType","seniorityLevel","function","join","contact","module","exports","site","RegExp","test","host","siteMetadata","siteUrl","href","rel","target","defaultProps"],"mappings":"qHAAA,2DA4BeA,IAdA,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,SAC3B,OACE,yBAAKD,UAAWA,GACd,kBAAC,IAAD,MACA,8BAAOC,GACP,kBAAC,IAAD,S,iOCRSC,G,oBANO,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAKC,EAAR,EAAQA,YAAR,OACpB,yBAAKJ,UAAU,UACb,yBAAKG,IAAKA,EAAKE,IAAKD,O,wBCoFTE,UA9EI,SAAC,GAAqB,IAFvBC,EAGVC,EADgC,EAAlBC,YACIC,QAAQF,IAEhC,OACE,kBAAC,IAAD,CAAQR,UAAU,oBAChB,kBAAC,IAAD,CACEW,MAAUH,EAAIG,MAAT,MAAoBH,EAAII,SAC7BR,aATUG,EASaC,EAAIJ,YATPG,EAAOM,QAAQ,aAAc,KAUjDC,MAAOC,IACPC,UAAW,CACTL,MAAUH,EAAIG,MAAT,MAAoBH,EAAII,YAGjC,iCACE,kBAAC,EAAD,CAAQR,YAAgBI,EAAIG,MAAT,MAAoBH,EAAII,SAAYT,IAAKY,MAC5D,yBAAKf,UAAU,OACb,yBAAKA,UAAU,wCACb,wBAAIA,UAAU,aACXQ,EAAIG,MACL,6BAFF,IAES,+BAAQH,EAAII,WAErB,kBAACK,EAAA,EAAOC,QAAR,CACEC,MAAM,QACNC,MAAO,CAAEC,aAAc,QACvBC,IAAKC,IAAIC,OAAOC,UAElB,2BAAIC,EAAMtB,aACV,yBACEJ,UAAU,kBACV2B,wBAAyB,CAAEC,OAAQpB,EAAIJ,eAEzC,yBAAKJ,UAAU,eACb,+BACE,+BACE,4BACE,wBAAI6B,MAAM,OAAV,UACA,4BACE,uBAAGF,wBAAyB,CAAEC,OAAQpB,EAAIsB,QAG9C,4BACE,wBAAID,MAAM,OAAV,mBACA,4BACE,uBACEF,wBAAyB,CAAEC,OAAQpB,EAAIuB,oBAI7C,4BACE,wBAAIF,MAAM,OAAV,mBACA,4BACE,uBACEF,wBAAyB,CAAEC,OAAQpB,EAAIwB,oBAI7C,4BACE,wBAAIH,MAAM,OAAV,YACA,4BACE,2BAAIrB,EAAIyB,SAASC,KAAK,SAG1B,4BACE,wBAAIL,MAAM,OAAV,WACA,4BACE,uBAAGF,wBAAyB,CAAEC,OAAQpB,EAAI2B,sB,qBC9EhEC,EAAOC,QAAU,IAA0B,sD,ioBCoBrCpB,G,UAAS,SAAC,GAA2B,IAdxBV,EAcDe,EAAwB,EAAxBA,IAAKH,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MACpBkB,EADgC,OAChCA,KAiBR,OAhCiB/B,EA6BJe,IA5BG,IAAIiB,OAClB,wKAMA,KAGeC,KAAKjC,IAmBpB,IAAIgB,IAAID,GAAKmB,OAAS,IAAIlB,IAAIe,EAAKI,aAAaC,SAASF,MAIvD,uBACEzC,UARY,kBASZ4C,KAAMtB,EACNuB,IAAI,aACJzB,MAAOA,EACP0B,OAAO,UAEP,0BAAM9C,UAAU,SAASmB,IAM7B,uBAAGnB,UApBa,kBAoBS4C,KAAMtB,EAAKF,MAAOA,GACzC,0BAAMpB,UAAU,SAASmB,MAU/BF,EAAO8B,aAAe,CACpB5B,MAAM,GACNG,IAAI,IAGSL,QCjETA,G,UAAS,CACbC,YAGaD","file":"component---src-templates-job-posting-js-b65724c86a37abd12ca3.js","sourcesContent":["/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport Footer from \"./Footer/index\"\nimport Header from \"./header\"\nimport \"./layout.scss\"\n\nconst Layout = ({ className, children }) => {\n  return (\n    <div className={className}>\n      <Header />\n      <main>{children}</main>\n      <Footer />\n    </div>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import \"./index.scss\"\nimport React from \"react\"\n\nimport \"./index.scss\"\n\nexport const Banner = ({ src, description }) => (\n  <div className=\"banner\">\n    <img src={src} alt={description} />\n  </div>\n)\n\nexport default Banner\n","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport Metadata from \"../components/metadata\"\nimport cover from \"../images/cover.jpeg\"\nimport URL from \"../url\"\n\nimport \"./job-posting.scss\"\nimport Banner from \"../components/Banner\"\nimport Button from \"../components/Button\"\nimport about from \"../data/about.json\"\n\nconst stripHtml = string => string.replace(/<[^>]*>?/gm, \"\")\n\nconst JobPosting = ({ pageContext }) => {\n  const job = pageContext.current.job\n\n  return (\n    <Layout className=\"job-posting-page\">\n      <Metadata\n        title={`${job.title} â€¢ ${job.location}`}\n        description={stripHtml(job.description)}\n        image={cover}\n        openGraph={{\n          title: `${job.title} - ${job.location}`,\n        }}\n      />\n      <section>\n        <Banner description={`${job.title} - ${job.location}`} src={cover} />\n        <div className=\"row\">\n          <div className=\"col-xs-12 col-sm-9 col-md-9 col-lg-9\">\n            <h1 className=\"job-title\">\n              {job.title}\n              <br /> <small>{job.location}</small>\n            </h1>\n            <Button.Primary\n              label=\"Apply\"\n              style={{ marginBottom: \"2rem\" }}\n              url={URL.CAREER.CV_DROP}\n            />\n            <p>{about.description}</p>\n            <div\n              className=\"job-description\"\n              dangerouslySetInnerHTML={{ __html: job.description }}\n            />\n            <div className=\"job-details\">\n              <table>\n                <tbody>\n                  <tr>\n                    <th scope=\"row\">Job Id</th>\n                    <td>\n                      <p dangerouslySetInnerHTML={{ __html: job.id }} />\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Employment Type</th>\n                    <td>\n                      <p\n                        dangerouslySetInnerHTML={{ __html: job.employmentType }}\n                      />\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Seniority Level</th>\n                    <td>\n                      <p\n                        dangerouslySetInnerHTML={{ __html: job.seniorityLevel }}\n                      />\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Function</th>\n                    <td>\n                      <p>{job.function.join(\", \")}</p>\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Contact</th>\n                    <td>\n                      <p dangerouslySetInnerHTML={{ __html: job.contact }} />\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </section>\n    </Layout>\n  )\n}\n\nexport default JobPosting\n","module.exports = __webpack_public_path__ + \"static/cover-6975d9efa634ad007751aa35e3f6409a.jpeg\";","import PropTypes from \"prop-types\"\nimport React from \"react\"\n\nimport \"./index.scss\"\nimport { graphql, useStaticQuery } from \"gatsby\"\n\nconst isValidUrl = string => {\n  const pattern = new RegExp(\n    \"^(https?:\\\\/\\\\/)?\" + // protocol\n    \"((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|\" + // domain name\n    \"((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))\" + // OR ip (v4) address\n    \"(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*\" + // port and path\n    \"(\\\\?[;&a-z\\\\d%_.~+=-]*)?\" + // query string\n      \"(\\\\#[-a-z\\\\d_]*)?$\",\n    \"i\"\n  ) // fragment locator\n\n  return !!pattern.test(string)\n}\n\nconst Button = ({ url, label, style }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            siteUrl\n          }\n        }\n      }\n    `\n  )\n\n  const className = \"btn btn-primary\"\n  const isExternal =\n    isValidUrl(url) &&\n    new URL(url).host !== new URL(site.siteMetadata.siteUrl).host\n\n  if (isExternal) {\n    return (\n      <a\n        className={className}\n        href={url}\n        rel=\"noreferrer\"\n        style={style}\n        target=\"_blank\"\n      >\n        <span className=\"label\">{label}</span>\n      </a>\n    )\n  }\n\n  return (\n    <a className={className} href={url} style={style}>\n      <span className=\"label\">{label}</span>\n    </a>\n  )\n}\n\nButton.propTypes = {\n  label: PropTypes.string,\n  url: PropTypes.string,\n}\n\nButton.defaultProps = {\n  label: ``,\n  url: ``,\n}\n\nexport default Button\n","import { default as Primary } from \"./Primary/index\"\n\nimport \"./index.scss\"\n\nconst Button = {\n  Primary,\n}\n\nexport default Button\n"],"sourceRoot":""}